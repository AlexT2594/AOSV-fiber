<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="core_8c" kind="file" language="C++">
    <compoundname>core.c</compoundname>
    <includes refid="core_8h" local="yes">core.h</includes>
    <incdepgraph>
      <node id="105">
        <label>linux/list.h</label>
      </node>
      <node id="95">
        <label>src/core.c</label>
        <link refid="core_8c"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>linux/semaphore.h</label>
      </node>
      <node id="103">
        <label>linux/hashtable.h</label>
      </node>
      <node id="104">
        <label>linux/kernel.h</label>
      </node>
      <node id="106">
        <label>linux/module.h</label>
      </node>
      <node id="102">
        <label>linux/fs.h</label>
      </node>
      <node id="109">
        <label>linux/slab.h</label>
      </node>
      <node id="96">
        <label>core.h</label>
        <link refid="core_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>linux/sched/task_stack.h</label>
      </node>
      <node id="99">
        <label>linux/ioctl.h</label>
      </node>
      <node id="101">
        <label>asm/ptrace.h</label>
      </node>
      <node id="110">
        <label>linux/uaccess.h</label>
      </node>
      <node id="98">
        <label>ioctlcmd.h</label>
        <link refid="ioctlcmd_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>common.h</label>
        <link refid="common_8h_source"/>
      </node>
      <node id="100">
        <label>asm/current.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="core_8c_1af737f5ed1d2c3066c05129a98026d9dd" prot="public" static="yes" mutable="no">
        <type><ref refid="core_8h_1afffa2dfe134b8b5494026f1038f68a39" kindref="member">fibered_processes_list_t</ref></type>
        <definition>fibered_processes_list_t fibered_processes_list</definition>
        <argsstring></argsstring>
        <name>fibered_processes_list</name>
        <initializer>= {
    .head = NULL,
    .tail = NULL,
    .processes_count = 0
}</initializer>
        <briefdescription>
<para>The variable of the core part that will contain the <bold>fiber-enabled</bold> processes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.c" line="21" column="1" bodyfile="src/core.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="core_8c_1a0901eb890c674d9f7f5e97316fc67a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int convert_thread_to_fiber</definition>
        <argsstring>()</argsstring>
        <name>convert_thread_to_fiber</name>
        <briefdescription>
<para>Convert the current thread to a fiber. </para>        </briefdescription>
        <detaileddescription>
<para><heading level="1">Implementation</heading>
</para><para>When a thread is converted to a fiber several task are performed. First of all, if the process never created a fiber, it must become <bold>fiber-enabled</bold>, this means that we have to instantiate a <ref refid="structfibered__process" kindref="compound">fibered_process</ref> element in the <ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref> variable. Then we have to instantiate a <ref refid="structfiber" kindref="compound">fiber</ref> element in the <ref refid="structfibers__list" kindref="compound">fibers_list</ref> field of the <ref refid="structfibered__process" kindref="compound">fibered_process</ref> element of the list.</para><para><simplesect kind="return"><para>int 0 if everything ok, otherwise an error listed in <ref refid="ioctlcmd_8h" kindref="compound">ioctlcmd.h</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core.c" line="44" column="1" bodyfile="src/core.c" bodystart="44" bodyend="107"/>
        <references refid="structfibered__processes__list_1a460c3f34099c7589c25c383add98650b" compoundref="core_8h" startline="85">fibered_processes_list::head</references>
        <references refid="structfibered__process_1ad8f9adb6ee521988f3607ccf279e10a6" compoundref="core_8h" startline="73">fibered_process::pid</references>
        <references refid="structfibered__process_1a8779fb1384900987ccd2d0d9de09a1ab" compoundref="core_8h" startline="70">fibered_process::next</references>
        <references refid="structfibered__processes__list_1a357ed70a414391e2cde4cf1c6062b6ce" compoundref="core_8h" startline="87">fibered_processes_list::processes_count</references>
        <references refid="structfibered__process_1adf5ba8614f416e75bc026fe449fdd08c" compoundref="core_8h" startline="69">fibered_process::prev</references>
        <references refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" compoundref="core_8h" startline="71">fibered_process::fibers_list</references>
        <references refid="structfibers__list_1a54a8a9f5a97c783b1461257d6e07aa1a" compoundref="core_8h" startline="121">fibers_list::fibers_count</references>
        <references refid="structfibers__list_1aa1dd39c8c192607d164f204821d5b3ed" compoundref="core_8h" startline="119">fibers_list::head</references>
        <references refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" compoundref="core_8h" startline="120">fibers_list::tail</references>
        <references refid="structfibered__processes__list_1a423b95d461fa440ede7dd019b8c94aa6" compoundref="core_8h" startline="86">fibered_processes_list::tail</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains the implementation of all the core functions of the module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Gabriele Proietti Mattia <ulink url="mailto:gabry.gabry@hotmail.it">gabry.gabry@hotmail.it</ulink> </para></simplesect>
<simplesect kind="author"><para>Alexandru Daniel Tufa <ulink url="mailto:alex.tufa94@gmail.com">alex.tufa94@gmail.com</ulink> </para></simplesect>
<simplesect kind="date"><para>2018-05-13 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8h" kindref="compound">core.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Variables</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list_t</ref><sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structfibered__processes__list_1a460c3f34099c7589c25c383add98650b" kindref="member">head</ref><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>.tail<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>.processes_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Implementations</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="core_8c_1a0901eb890c674d9f7f5e97316fc67a2c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_8c_1a0901eb890c674d9f7f5e97316fc67a2c" kindref="member">convert_thread_to_fiber</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>process<sp/>already<sp/>created<sp/>at<sp/>least<sp/>a<sp/>fiber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfibered__process" kindref="compound">fibered_process_node_t</ref><sp/>*fibered_process_node<sp/>=<sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a460c3f34099c7589c25c383add98650b" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfiber" kindref="compound">fiber_node_t</ref><sp/>*fiber_node;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fibered_process_node<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fibered_process_node-&gt;<ref refid="structfibered__process_1ad8f9adb6ee521988f3607ccf279e10a6" kindref="member">pid</ref><sp/>==<sp/>current-&gt;tgid)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node<sp/>=<sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a8779fb1384900987ccd2d0d9de09a1ab" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>has<sp/>never<sp/>created<sp/>a<sp/>fiber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node<sp/>=<sp/>kmalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfibered__process" kindref="compound">fibered_process_node_t</ref>),<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1ad8f9adb6ee521988f3607ccf279e10a6" kindref="member">pid</ref><sp/>=<sp/>current-&gt;tgid;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a357ed70a414391e2cde4cf1c6062b6ce" kindref="member">processes_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1adf5ba8614f416e75bc026fe449fdd08c" kindref="member">prev</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a8779fb1384900987ccd2d0d9de09a1ab" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref><sp/>=<sp/>kmalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfibers__list" kindref="compound">fibers_list_t</ref>),<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1a54a8a9f5a97c783b1461257d6e07aa1a" kindref="member">fibers_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1aa1dd39c8c192607d164f204821d5b3ed" kindref="member">head</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" kindref="member">tail</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>head<sp/>is<sp/>null<sp/>we<sp/>have<sp/>to<sp/>init<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a460c3f34099c7589c25c383add98650b" kindref="member">head</ref><sp/>==<sp/>NULL)<sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a460c3f34099c7589c25c383add98650b" kindref="member">head</ref><sp/>=<sp/>fibered_process_node;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>we<sp/>append<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a423b95d461fa440ede7dd019b8c94aa6" kindref="member">tail</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a423b95d461fa440ede7dd019b8c94aa6" kindref="member">tail</ref>-&gt;<ref refid="structfibered__process_1a8779fb1384900987ccd2d0d9de09a1ab" kindref="member">next</ref><sp/>=<sp/>fibered_process_node;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1adf5ba8614f416e75bc026fe449fdd08c" kindref="member">prev</ref><sp/>=<sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a423b95d461fa440ede7dd019b8c94aa6" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfibered__processes__list" kindref="compound">fibered_processes_list</ref>.<ref refid="structfibered__processes__list_1a423b95d461fa440ede7dd019b8c94aa6" kindref="member">tail</ref><sp/>=<sp/>fibered_process_node;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>printk(KERN_DEBUG<sp/>MODULE_NAME<sp/>CORE_LOG<sp/></highlight><highlight class="stringliteral">&quot;tgid<sp/>is<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1ad8f9adb6ee521988f3607ccf279e10a6" kindref="member">pid</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>thread<sp/>is<sp/>already<sp/>a<sp/>fiber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fiber_node<sp/>=<sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1aa1dd39c8c192607d164f204821d5b3ed" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fiber_node<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fiber_node-&gt;created_by<sp/>==<sp/>current-&gt;pid)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node<sp/>=<sp/>fiber_node-&gt;<ref refid="structfiber_1a8edc01f505460ec3df1f5319d26ee0cd" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node<sp/>=<sp/>kmalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfiber" kindref="compound">fiber_node_t</ref>),<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node-&gt;<ref refid="structfiber_1a327a77d565b2e0054f97b057e55b2178" kindref="member">prev</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node-&gt;<ref refid="structfiber_1a8edc01f505460ec3df1f5319d26ee0cd" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node-&gt;created_by<sp/>=<sp/>current-&gt;pid;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1a54a8a9f5a97c783b1461257d6e07aa1a" kindref="member">fibers_count</ref>++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1aa1dd39c8c192607d164f204821d5b3ed" kindref="member">head</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1aa1dd39c8c192607d164f204821d5b3ed" kindref="member">head</ref><sp/>=<sp/>fiber_node;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" kindref="member">tail</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" kindref="member">tail</ref>-&gt;<ref refid="structfiber_1a8edc01f505460ec3df1f5319d26ee0cd" kindref="member">next</ref><sp/>=<sp/>fiber_node;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiber_node-&gt;<ref refid="structfiber_1a327a77d565b2e0054f97b057e55b2178" kindref="member">prev</ref><sp/>=<sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1af94c6bcedeb27c078ea1fa4869c53673" kindref="member">tail</ref><sp/>=<sp/>fiber_node;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ERR_THREAD_ALREADY_FIBER;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>fiber_node-&gt;<ref refid="structfiber_1a6301190065f177d47b2d74fa1d1240c0" kindref="member">id</ref><sp/>=<sp/>fibered_process_node-&gt;<ref refid="structfibered__process_1a1aae0be425bbc05b6444909f16ec56b9" kindref="member">fibers_list</ref>-&gt;<ref refid="structfibers__list_1a54a8a9f5a97c783b1461257d6e07aa1a" kindref="member">fibers_count</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>fiber_node-&gt;state<sp/>=<sp/><ref refid="core_8h_1a7b11bd960a2de8da146a5ebb7f7abbc2a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/core.c"/>
  </compounddef>
</doxygen>
