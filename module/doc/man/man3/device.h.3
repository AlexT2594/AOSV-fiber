.TH "include/device.h" 3 "Mon May 14 2018" "Version 0.0.1b" "Fiber(KernelModule)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/device.h \- This file contains definitions and macros for the \fIdevice\fP of the module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'common\&.h'\fP
.br
\fC#include 'core\&.h'\fP
.br
\fC#include 'ioctlcmd\&.h'\fP
.br
\fC#include <asm/current\&.h>\fP
.br
\fC#include <asm/ptrace\&.h>\fP
.br
\fC#include <linux/cdev\&.h>\fP
.br
\fC#include <linux/fs\&.h>\fP
.br
\fC#include <linux/hashtable\&.h>\fP
.br
\fC#include <linux/ioctl\&.h>\fP
.br
\fC#include <linux/kernel\&.h>\fP
.br
\fC#include <linux/miscdevice\&.h>\fP
.br
\fC#include <linux/module\&.h>\fP
.br
\fC#include <linux/sched/task_stack\&.h>\fP
.br
\fC#include <linux/semaphore\&.h>\fP
.br
\fC#include <linux/slab\&.h>\fP
.br
\fC#include <linux/uaccess\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBfiber_dev\fP"
.br
.RI "The main structure of the fiber char device\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEVICE_LOG\fP   ': DEV: '"
.br
.ti -1c
.RI "#define \fBFIBER_DEVICE_NAME\fP   'fiber'"
.br
.ti -1c
.RI "#define \fBBUF_LEN\fP   80"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBfiber_dev\fP \fBfiber_dev_t\fP"
.br
.RI "The main structure of the fiber char device\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBinit_device\fP (void)"
.br
.RI "Init the device inspired by https://www.linuxjournal.com/article/2920\&. "
.ti -1c
.RI "void \fBdestroy_device\fP (void)"
.br
.RI "Destroy the device\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains definitions and macros for the \fIdevice\fP of the module\&. 


.PP
\fBAuthor:\fP
.RS 4
Gabriele Proietti Mattia gabry.gabry@hotmail.it 
.PP
Alexandru Daniel Tufa alex.tufa94@gmail.com 
.RE
.PP
\fBDate:\fP
.RS 4
2018-05-13 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int init_device (void)"

.PP
Init the device inspired by https://www.linuxjournal.com/article/2920\&. 
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fiber(KernelModule) from the source code\&.
