.TH "src/core.c" 3 "Mon May 14 2018" "Version 0.0.1b" "Fiber(KernelModule)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/core.c \- This file contains the implementation of all the core functions of the module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'core\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBconvert_thread_to_fiber\fP ()"
.br
.RI "Convert the current thread to a fiber\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains the implementation of all the core functions of the module\&. 


.PP
\fBAuthor:\fP
.RS 4
Gabriele Proietti Mattia gabry.gabry@hotmail.it 
.PP
Alexandru Daniel Tufa alex.tufa94@gmail.com 
.RE
.PP
\fBDate:\fP
.RS 4
2018-05-13 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int convert_thread_to_fiber (void)"

.PP
Convert the current thread to a fiber\&. 
.SH "Implementation"
.PP
.PP
When a thread is converted to a fiber several task are performed\&. First of all, if the process never created a fiber, it must become \fBfiber-enabled\fP, this means that we have to instantiate a \fBfibered_process\fP element in the \fBfibered_processes_list\fP variable\&. Then we have to instantiate a \fBfiber\fP element in the \fBfibers_list\fP field of the \fBfibered_process\fP element of the list\&.
.PP
\fBReturns:\fP
.RS 4
int 0 if everything ok, otherwise an error listed in \fBioctlcmd\&.h\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fiber(KernelModule) from the source code\&.
